<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LogIn" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="EmptyFields" xml:space="preserve">
    <value>Empty Fields</value>
  </data>
  <data name="IncorrectCredentials" xml:space="preserve">
    <value>Incorrect Credentials</value>
  </data>
  <data name="Offline" xml:space="preserve">
    <value>Offline</value>
  </data>
  <data name="SuccesfulLogin" xml:space="preserve">
    <value>Successful Login</value>
  </data>
  <data name="EditProfile" xml:space="preserve">
    <value>Edit Profile</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="DateBirth" xml:space="preserve">
    <value>Date Birth</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="WrongEmail" xml:space="preserve">
    <value>Wrong Email</value>
  </data>
  <data name="RegistrationSuccessful" xml:space="preserve">
    <value>Registration Successful</value>
  </data>
  <data name="MainMenu" xml:space="preserve">
    <value>Main Menu</value>
  </data>
  <data name="NewGame" xml:space="preserve">
    <value>New Game</value>
  </data>
  <data name="Join" xml:space="preserve">
    <value>Join</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="Accept" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="Enter" xml:space="preserve">
    <value>Enter</value>
  </data>
  <data name="AvailableGames" xml:space="preserve">
    <value>Available Games</value>
  </data>
  <data name="ViewScore" xml:space="preserve">
    <value>ViewScore</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="ChangesSavedSuccesfully" xml:space="preserve">
    <value>Changes Saved Succesfully</value>
  </data>
  <data name="Statistics" xml:space="preserve">
    <value>Statistics</value>
  </data>
  <data name="WaitingRoom" xml:space="preserve">
    <value>Waiting Room</value>
  </data>
  <data name="JoinRoom" xml:space="preserve">
    <value>Join Room</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CancelMatch" xml:space="preserve">
    <value>Cancel Match</value>
  </data>
  <data name="WrongGameCode" xml:space="preserve">
    <value>Wrong Game Code</value>
  </data>
  <data name="MatchCanceled" xml:space="preserve">
    <value>MatchCanceled</value>
  </data>
  <data name="You Win" xml:space="preserve">
    <value>You Win</value>
  </data>
  <data name="YouLose" xml:space="preserve">
    <value>You Lose</value>
  </data>
  <data name="Points" xml:space="preserve">
    <value>Points</value>
  </data>
  <data name="IDontHaveAnAccount Yet" xml:space="preserve">
    <value>I don't have an account yet</value>
  </data>
  <data name="EmptyFieldsDescription" xml:space="preserve">
    <value>Empty fields detected. Fill them out to continue.</value>
  </data>
  <data name="IncorrectCredentialsDescription" xml:space="preserve">
    <value>The credentials you entered do not match any registered user. Please try again or try again later.</value>
  </data>
  <data name="TryAgainLater" xml:space="preserve">
    <value>Please try again later.</value>
  </data>
  <data name="ConnectionErrorDescription" xml:space="preserve">
    <value>Connection error. Please check your internet connection and try again later.</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome! Are you ready to start a fun game?</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="EmailAlreadyRegesitered" xml:space="preserve">
    <value>This email is already registered. Try a different one or try again later.</value>
  </data>
  <data name="UpdateSuccessfull" xml:space="preserve">
    <value>Your information has been successfully updated</value>
  </data>
  <data name="GameCode" xml:space="preserve">
    <value>Game Code:</value>
  </data>
  <data name="WaitingRoom1" xml:space="preserve">
    <value>Your game code is:</value>
  </data>
  <data name="WaitingRoom2" xml:space="preserve">
    <value>Has joined the game</value>
  </data>
  <data name="YoureAboutToStartAMatchWith1" xml:space="preserve">
    <value>You’re about to start a match with</value>
  </data>
  <data name="AreYouReady2" xml:space="preserve">
    <value>Are you ready?</value>
  </data>
  <data name="GamceCancelled" xml:space="preserve">
    <value>The game was canceled by one of the players.</value>
  </data>
  <data name="InvalidCodeEntered" xml:space="preserve">
    <value>Invalid code entered. Try again or try again later.</value>
  </data>
  <data name="YouDidntGuessTheWord" xml:space="preserve">
    <value>You didn't guess the word</value>
  </data>
  <data name="YouGuessedTheWordCorrectly" xml:space="preserve">
    <value>You guessed the word correctly!</value>
  </data>
  <data name="Spanish" xml:space="preserve">
    <value>Spanish</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="InvalidFields" xml:space="preserve">
    <value>Invalid Fields</value>
  </data>
  <data name="FieldsTooLong" xml:space="preserve">
    <value>One or more fields exceed the permitted length.</value>
  </data>
  <data name="CharacterFields" xml:space="preserve">
    <value>Username, name, and password may only contain letters and numbers</value>
  </data>
  <data name="PhoneNumberLength" xml:space="preserve">
    <value>Phone number may only contain up to 10 digits.</value>
  </data>
  <data name="NotVaildEmail" xml:space="preserve">
    <value>The email doesn't have a valid format.</value>
  </data>
  <data name="AvailableRooms" xml:space="preserve">
    <value>Available waiting rooms</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="ChallengerView" xml:space="preserve">
    <value>Challenger</value>
  </data>
  <data name="ProposedLetter" xml:space="preserve">
    <value>Proposed letter:</value>
  </data>
  <data name="PlayersInMatch" xml:space="preserve">
    <value>Players in the match:</value>
  </data>
  <data name="GuesserView" xml:space="preserve">
    <value>Guesser</value>
  </data>
  <data name="ConfirmLetter" xml:space="preserve">
    <value>Confirm Letter</value>
  </data>
  <data name="DeclineLetter" xml:space="preserve">
    <value>Decline Letter</value>
  </data>
  <data name="CouldntCompleteRegister" xml:space="preserve">
    <value>Couldn't complete register (duplicate or error in data)</value>
  </data>
  <data name="ErrorRegister" xml:space="preserve">
    <value>Couldn't complete register</value>
  </data>
</root>